package com.smkituilibrary.mapper

import android.net.Uri
import com.sency.smkitui.model.BodyZone
import com.sency.smkitui.model.DifficultyLevel
import com.sency.smkitui.model.SMExercise
import com.sency.smkitui.model.SMLanguage
import com.sency.smkitui.model.SMWorkout
import com.sency.smkitui.model.WorkoutConfig
import com.sency.smkitui.model.WorkoutDuration
import com.smkituilibrary.model.SMKitExercise
import com.smkituilibrary.model.SMKitWorkout
import com.smkituilibrary.model.SMKitWorkoutConfig

internal fun SMKitWorkoutConfig.toWorkoutConfig(): WorkoutConfig = WorkoutConfig(
  programId = programID,
  week = week,
  bodyZone = BodyZone.valueOf(bodyZone, BodyZone.FullBody),
  difficultyLevel = DifficultyLevel.valueOf(difficultyLevel, DifficultyLevel.HighDifficulty),
  workoutDuration = WorkoutDuration.valueOf(workoutDuration, WorkoutDuration.Long),
  language = SMLanguage.English,
)

internal fun SMKitWorkout.toSMWorkout(): SMWorkout = SMWorkout(
  id = id ?: "",
  name = name ?: "",
  workoutIntro = workoutIntro ?: "",
  soundtrack = soundtrack ?: "",
  exercises = exercises.map(SMKitExercise::toSMExercise),
  workoutClosure = workoutClosure ?: "",
  getInFrame = "",
  bodycalFinished = ""
)

private fun SMKitExercise.toSMExercise(): SMExercise = SMExercise(
  prettyName = name ?: "",
  exerciseIntro = exerciseIntro ?: "",
  totalSeconds = totalSeconds ?: 0,
  introSeconds = introSeconds ?: 0,
  videoInstruction = videoInstruction ?:"",
  uiElements = uiElements ?: emptySet(),
  detector = detector ?: "",
  repBased = repBased ?: false,
  exerciseClosure = exerciseClosure ?: "",
  targetReps = 0,
  targetTime = 0,
  scoreFactor = 0.0,
  passCriteria = null
)
